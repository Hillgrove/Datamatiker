
/// <summary>
/// General interface for a technology-neutral "data service", 
/// which offer CRUD-like functionality for a specific data type.
/// </summary>
/// <typeparam name="T">Type of objects managed by data service</typeparam>
public interface IDataService<T> where T : class, IHasId
{
    /// <summary>
    /// Stores the given object in the data source, and also assigns a new ID to it.
    /// The ID value is generated by the data source.
    /// </summary>
    /// <returns>ID for the stored object.</returns>
    int Create(T t);

    /// <summary>
    /// Reads the object with the given ID from data source.
    /// </summary>
    /// <returns>Object with the given ID, if such an objects exists. Otherwise null.</returns>
    T? Read(int id);

    /// <summary>
    /// Deletes the object with the given ID from the data source.
    /// </summary>
    /// <returns>true if an object was deleted, otherwise false</returns>
    bool Delete(int id);

    /// <summary>
    /// Returns all stored objects in the data source.
    /// </summary>
    List<T> GetAll();
}
